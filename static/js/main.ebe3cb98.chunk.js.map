{"version":3,"sources":["img/virus-enhanced.png","InfoPopup.js","InfoBox.js","util.js","LineGraph.js","DataTable.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InfoPopup","props","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","Tooltip","title","content","placement","arrow","className","position","class","aria-hidden","InfoBox","cases","total","active","isRed","isGreen","isGrey","maxWidth","typography","pxToRem","border","infoContent","Card","onClick","elevation","CardContent","Typography","id","gutterBottom","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","util","prettyPrintStat","stat","numeral","format","sortData","data","key","sortedData","sort","a","b","epochToDate","epoch","d","Date","setUTCMilliseconds","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","tooltipItem","m","moment","xLabel","add","label","value","scales","xAxes","type","time","tooltipFormat","stepSize","ticks","callback","index","values","yAxes","gridLines","beginAtZero","min","buildChartData","casesType","weekEndCount","weekEndDate","chartData","caseData","days","Object","keys","reverse","date","push","x","y","LineGraph","country","useState","setData","useEffect","fetch","then","response","json","timeline","fetchData","length","datasets","borderColor","columns","minWidth","toLocaleString","defaultSortOrder","align","useStyles","makeStyles","root","width","container","maxHeight","descendingComparator","orderBy","DataTable","stateType","classes","React","page","setPage","rowsPerPage","setRowsPerPage","sortProperty","setSortProperty","sortDirection","setSortDirection","order","stateTypeColumnId","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","isActiveSort","TableCell","style","padding","TableSortLabel","direction","newSortProperty","find","c","isDefault","handleSortLabelClick","charAt","toUpperCase","slice","TableBody","array","comparator","stabilizedThis","el","stableSort","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","target","Map","countries","center","zoom","minZoom","worldCopyJump","TileLayer","url","attribution","Circle","countryInfo","lat","long","fillOpacity","fillColor","Math","sqrt","Popup","backgroundImage","flag","updated","showDataOnMap","App","worldwideLatLng","lng","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","setCasesType","mapCenter","setMapCenter","mapZoom","setMapZoom","statesData","setStatesData","countriesData","setCountriesData","setStateType","asOfDate","setAsOfDate","name","iso2","getCountriesData","getStatesData","onCountryChange","e","countryCode","isWorldwide","overrideMap","forEach","currentCountry","refTop","useRef","refMap","refBot","goto","ref","current","scrollIntoView","behavior","block","src","bannerImage","alt","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ebe3cb98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virus-enhanced.0f871570.png\";","import React from 'react';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport './InfoPopup.css';\n\nfunction InfoPopup( props ) {\n\n  const LightTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: \"rgba(0, 0, 0, 0.87)\",\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n    },\n  }))(Tooltip);\n\n  return (\n    <LightTooltip title={props.content} placement={props.placement} arrow>\n      <div className={props.position}>\n        <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n      </div>\n    </LightTooltip>\n  );\n};\n\nexport default InfoPopup;\n","import React from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./InfoBox.css\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport InfoPopup from './InfoPopup';\n\nfunction InfoBox({ title, cases, total, active, isRed, isGreen, isGrey, ...props }) {\n  //Styling the pop-up\n  const LightTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: \"rgba(0, 0, 0, 0.87)\",\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: \"1px solid #dadde9\",\n    },\n  }))(Tooltip);\n\n  //Default jsx for normal data\n  let infoContent = (\n    <h2\n      className={`infoBox__cases  \n          ${isRed && \"infoBox--redText\"}\n          ${isGreen && \"infoBox--greenText\"}`}\n    >\n      {cases}\n    </h2>\n  );\n\n  //Show pop-up when \"No Data\" is showed\n  if (cases === \"No Data\") {\n    const noData = \"The data of this country is unavailable at the moment. Please check back later.\";\n\n    infoContent = (\n      <LightTooltip title={noData} placement=\"top\" arrow>\n        {infoContent}\n      </LightTooltip>\n      );\n  }\n\n  //Setting contents for info icon of each case tile:\n  let content = \"N/A\";\n  switch (title) {\n    case \"New Cases\":\n      content = \"The today's count of new active cases and the total count of all confirmed COVID-19 cases.\";\n      break;\n    case \"New Recovered\":\n      content = \"The today's count of new recoveries and the total count of all confirmed COVID-19 recoveries.\";\n      break;\n    case \"New Deaths\":\n      content = \"The today's count of new death and the total count of all confirmed deaths from the COVID-19 virus.\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Card\n      onClick={props.onClick}\n      elevation={7}\n      className={`infoBox ${active && \"infoBox--selected\"} \n      ${isRed && \"infoBox--red\"}\n      ${isGreen && \"infoBox--green\"}\n      ${isGrey && \"infoBox--grey\"}`}\n    >\n      <CardContent className=\"infoContent\">\n        <Typography id=\"infoBox__title\" color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        {infoContent}\n        <Typography id=\"infoBox__total\" color=\"textSecondary\">\n          {total} Total\n        </Typography>\n        <InfoPopup position=\"infoBox-icon\" content={content} placement=\"bottom\"/>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nexport const casesTypeColors = {\n  cases: {\n    hex: \"#ffa500\",\n    rgb: \"rgb(255, 165, 0)\",\n    half_op: \"rgba(255, 165, 0, 0.5)\",\n    multiplier: 400,\n  },\n  recovered: {\n    hex: \"#0059ff\",\n    rgb: \"rgb(0, 89, 255)\",\n    half_op: \"rgba(0, 89, 255, 0.5)\",\n    multiplier: 600,\n  },\n  deaths: {\n    hex: \"#6e6e6e\",\n    rgb: \"rgb(110, 110, 110)\",\n    half_op: \"rgba(110, 110, 110, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\nfunction util() {\n  return <div></div>;\n}\n\nexport default util;\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `${numeral(stat).format(\"0,0\")}` : \"No Data\";\n\nexport const sortData = (data, key = \"cases\") => {\n  const sortedData = [...data];\n\n  sortedData.sort((a, b) => {\n    if (a[key] > b[key]) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n\n  return sortedData;\n};\n\nexport const epochToDate = (epoch) => {\n  const d = new Date(0);\n  d.setUTCMilliseconds(epoch);\n  return d;\n};\n\n//Draw circles on the map\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country) => (\n    <Circle\n      key={country.country}\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.4}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          />\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n          {country.updated &&\n            <div className=\"info-asoftime\">\n              Data as of:<br/>{epochToDate(country.updated).toLocaleString()}\n            </div>\n          }\n        </div>\n      </Popup>\n    </Circle>\n  ));\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { casesTypeColors } from \"./util\";\nimport moment from \"moment\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      title: function (tooltipItem, data) {\n        const m = moment(tooltipItem[0].xLabel, \"MMM D, YYYY\");\n        const format = \"MMM D\";\n        return m.format(format) + \" - \" + m.add(7, 'd').format(format);\n      },\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n          stepSize: 7,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            const m = moment(new Date(values[index].value));\n            const format = \"MMM D\";\n            return m.add(7, 'd').format(format);\n          },\n        }\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n          beginAtZero: true,\n          min: 0,\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  const chartData = [];\n  const caseData = data[casesType];\n  let days = 0;\n  let weekEndCount;\n  let weekEndDate;\n  for (const date of Object.keys(caseData).reverse()) {\n    if (days === 0) {\n      if (weekEndDate) {\n        chartData.push({\n          x: date + \"-\" + weekEndDate,\n          y: weekEndCount - caseData[date],\n        });\n      }\n      weekEndDate = date;\n      weekEndCount = caseData[date];\n    }\n    days = (days + 1) % 7;\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType=\"cases\", country=\"worldwide\", ...props }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/\" + (country === \"worldwide\" ? \"all\" : country) + \"?lastdays=\" + (24 * 7))\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          if (data.timeline)\n          {\n            data = data.timeline;\n          }\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType, country]);\n\n  return (\n    <div className={props.className}>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: casesTypeColors[casesType].half_op,\n                borderColor: casesTypeColors[casesType].rgb,\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n      {!data.length && (\n        \"No data found.\"\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport './DataTable.css';\n\nconst columns = [\n  {\n    id: 'stateType',\n    minWidth: 170,\n    format: (value) => value.toLocaleString('en-US'),\n    defaultSortOrder: 'asc',\n  },\n  {\n    id: 'cases',\n    label: 'Cases',\n    minWidth: 100,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n    defaultSortOrder: 'desc',\n  },\n  {\n    id: 'recovered',\n    label: 'Recovered',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n    defaultSortOrder: 'desc',\n  },\n  {\n    id: 'deaths',\n    label: 'Deaths',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n    defaultSortOrder: 'desc',\n  },\n  {\n    id: 'tests',\n    label: 'Tests',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n    defaultSortOrder: 'desc',\n  },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n    defaultSortOrder: 'desc'\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction DataTable({ stateType, data, casesType } ) {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [sortProperty, setSortProperty] = React.useState(casesType);\n  const [sortDirection, setSortDirection] = React.useState('desc');\n\n  React.useEffect(() => {\n    setSortProperty(casesType);\n    setSortDirection('desc');\n  }, [casesType, data]);\n  \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  const stateTypeColumnId = (stateType === \"States and Territories\" ? \"state\" : \"country\");\n\n  const handleSortLabelClick = (newSortProperty) => {\n    const column = columns.find((c) => c.id === newSortProperty);\n\n    if (newSortProperty === 'stateType') newSortProperty = stateTypeColumnId;\n\n    const isDefault = (newSortProperty === sortProperty && column && column.defaultSortOrder === sortDirection);\n    setSortDirection(isDefault ? (sortDirection === 'asc' ? 'desc' : 'asc') : column.defaultSortOrder);\n    setSortProperty(newSortProperty);\n  }\n\n  return (\n    <Paper className={classes.root}>\n    <TableContainer className={classes.container}>\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            {columns.map((column) => {\n              const isActiveSort = sortProperty === column.id || (sortProperty === stateTypeColumnId && 'stateType' === column.id);\n              return <TableCell\n                key={column.id}\n                align={column.align}\n                style={{ minWidth: column.minWidth, padding: 0 }}\n                className={(casesType === column.id ? \"sortkey \" + casesType : \"\")}\n                sortDirection={(sortProperty === column.id ? sortDirection : false)}\n              >\n                <TableSortLabel\n                  active={isActiveSort}\n                  direction={isActiveSort ? sortDirection : column.defaultSortOrder}\n                  onClick={() => handleSortLabelClick(column.id)}\n                  style={{\"padding\": \"16px\"}}\n                >\n                  {(column.id === \"stateType\" ? stateTypeColumnId.charAt(0).toUpperCase() + stateTypeColumnId.slice(1) : column.label)}\n                </TableSortLabel>\n              </TableCell>\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {stableSort(data, getComparator(sortDirection, sortProperty))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[stateTypeColumnId]}>\n                  {columns.map((column) => {\n                    const value = row[(column.id === \"stateType\" ? stateTypeColumnId : column.id)];\n                    return (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        className={(casesType === column.id ? \"sortkey \" + casesType : \"\")}\n                      >\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <TablePagination\n      rowsPerPageOptions={[10, 25, 100]}\n      component=\"div\"\n      count={data.length}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n    />\n  </Paper>\n  );\n}\n\nexport default DataTable;\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport \"./Map.css\";\nimport { showDataOnMap } from \"./util\";\n\nfunction Map({ countries, casesType, center, zoom }) {\n  return (\n    <div className=\"map\">\n      <LeafletMap center={center} zoom={zoom} minZoom='2' worldCopyJump='true'>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {showDataOnMap(countries, casesType)}\n      </LeafletMap>\n    </div>\n  );\n}\n\nexport default Map;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport DataTable from \"./DataTable\";\nimport { sortData, prettyPrintStat, epochToDate } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport bannerImage from \"./img/virus-enhanced.png\";\nimport InfoPopup from './InfoPopup';\n\nconst App = () => {\n  const worldwideLatLng = { lat: 34.80746, lng: -40.4796 };\n  const worldwideZoom = 2.5;\n\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState(worldwideLatLng);\n  const [mapZoom, setMapZoom] = useState(worldwideZoom);\n  const [statesData, setStatesData] = useState([]);\n  const [countriesData, setCountriesData] = useState([]);\n  const [stateType, setStateType] = useState(\"Country\");\n  const [asOfDate, setAsOfDate] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n        setAsOfDate(epochToDate(data.updated));\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data, casesType);\n          setCountries(countries);\n          setMapCountries(data);\n          setCountriesData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, [casesType]);\n\n  useEffect(() => {\n    const getStatesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/states?allowNull=true\")\n        .then((response) => response.json())\n        .then((data) => {\n          let sortedData = sortData(data, casesType);\n          setStatesData(sortedData);\n        });\n    };\n\n    getStatesData();\n  }, [casesType]);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const isWorldwide = (countryCode === \"worldwide\");\n    const url =\n        isWorldwide\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        if (isWorldwide) {\n          setMapCenter(worldwideLatLng)\n          setMapZoom(worldwideZoom);\n        }\n        else {\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n          setMapZoom(4);\n        }\n        setAsOfDate(epochToDate(data.updated));\n\n        //this overrides the cached data that is used for the map with the most recent info,\n        //so that the tiles and the map popup are in sync with each other\n        let overrideMap = mapCountries;\n        overrideMap.forEach((currentCountry, index) => {\n          if (currentCountry.countryInfo.iso2 === countryCode) {\n            // if (overrideMap[index].cases != data.cases\n            //   || overrideMap[index].deaths != data.deaths\n            //   || overrideMap[index].recovered != data.recovered\n            //   || overrideMap[index].todayCases != data.todayCases\n            //   || overrideMap[index].todayDeaths != data.todayDeaths\n            //   || overrideMap[index].todayRecovered != data.todayRecovered\n            // )\n            // {\n            //   console.log(\"old:\", overrideMap[index]);\n            //   console.log(\"new:\", data);\n            // }\n            overrideMap[index] = data;\n            setMapCountries(overrideMap);\n            return false;\n          }\n        });\n      });\n\n    if (countryCode === \"US\")\n    {\n      setStateType(\"States and Territories\");\n    }\n    else {\n      setStateType(\"Country\");\n    }\n  };\n\n  const refTop = useRef(null);\n  const refMap = useRef(null);\n  const refBot = useRef(null);\n  const goto = (ref) => ref.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n  return (\n    <div id=\"top\" className=\"app\" ref={refTop}>\n      <div className=\"app__header\">\n        <div className=\"app__banner\">\n          <img src={bannerImage} alt=\"Banner\" className=\"app__bannerImage\" />\n        </div>\n        <div className=\"app__titleContainer\">\n          <h2>COVID-19 TRACKER</h2>\n          <p>Stay Home . Stay Safe</p>\n        </div>\n      </div>\n\n      <div className=\"app__dropdownContainer\">\n        <FormControl className=\"app__dropdown\">\n          <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {countries.map((country) => (\n              <MenuItem key={country.value} value={country.value}>\n                {country.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className=\"app__stats\">\n        {asOfDate && (\n          <div className=\"app__asOfDate\">\n            Data as of {asOfDate.toLocaleString()}\n          </div>\n        )}\n        <InfoBox\n          onClick={(e) => setCasesType(\"cases\")}\n          title=\"New Cases\"\n          isRed\n          active={casesType === \"cases\"}\n          cases={prettyPrintStat(countryInfo.todayCases)}\n          total={numeral(countryInfo.cases).format(\"0,0\")}\n        />\n        <InfoBox\n          onClick={(e) => setCasesType(\"recovered\")}\n          title=\"New Recovered\"\n          isGreen\n          active={casesType === \"recovered\"}\n          cases={prettyPrintStat(countryInfo.todayRecovered)}\n          total={numeral(countryInfo.recovered).format(\"0,0\")}\n        />\n        <InfoBox\n          onClick={(e) => setCasesType(\"deaths\")}\n          title=\"New Deaths\"\n          isGrey\n          active={casesType === \"deaths\"}\n          cases={prettyPrintStat(countryInfo.todayDeaths)}\n          total={numeral(countryInfo.deaths).format(\"0,0\")}\n        />\n      </div>\n\n      <div className=\"app__travelInfo\">\n        <a\n          href=\"https://www.cdc.gov/coronavirus/2019-ncov/travelers/map-and-travel-notices.html#travel-1\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <button class=\"button button1\">\n            <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>{\" \"}\n            Countries on high risk to travel due to COVID-19 by CDC guidelines -\n            Check it out !{\" \"}\n          </button>\n        </a>\n      </div>\n\n      <div id=\"map\" className=\"app__map\" ref={refMap}>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n\n      <div className=\"app__table__graph\">\n        <Card className=\"app__tableContainer\">\n          <CardContent>\n            <div className=\"app__table\">\n              <h3>Live Cases by {stateType}</h3>\n              <DataTable\n                stateType={stateType}\n                casesType={casesType}\n                data={\n                  stateType === \"States and Territories\"\n                    ? statesData\n                    : countriesData\n                }\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"app__table__graph\">\n        <Card className=\"app__graphContainer\">\n          <CardContent>\n            <h3>\n              {countryInfo.country ?? \"Worldwide\"} new {casesType}\n            </h3>\n            <InfoPopup\n              position=\"infoGraph-icon\"\n              content={\"Graph shows Data from last 24 weeks\"}\n              placement=\"left\"\n            />\n            <LineGraph\n              casesType={casesType}\n              country={country}\n              className=\"app__graph\"\n            />\n          </CardContent>\n        </Card>\n      </div>\n\n      <div id=\"bottom\" className=\"app__footer\" ref={refBot}>\n        <h2 className=\"app__footerTitle\">INFORMATION</h2>\n        <div className=\"app__footerInfo\">\n          <p>\n            Data source:{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://disease.sh/\"\n            >\n              Disease.sh API\n            </a>\n          </p>\n          <p>\n            For more information about the COVID-19 pandemic, please visits{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.cdc.gov/\"\n            >\n              www.cdc.gov\n            </a>\n          </p>\n          <p>\n            Questions?{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"mailto:vy.m.phan@gmail.com\"\n            >\n              Contact us\n            </a>\n          </p>\n        </div>\n      </div>\n      <div class=\"app__sticky\">\n        <ul>\n          <li>\n            <a onClick={(e) => goto(refTop)}>\n              <i class=\"fa fa-chevron-up\" aria-hidden=\"true\"></i>\n            </a>\n          </li>\n          <li>\n            <a onClick={(e) => goto(refMap)}>\n              <i class=\"fa fa-map\" aria-hidden=\"true\"></i>\n            </a>\n          </li>\n          <li>\n            <a onClick={(e) => goto(refBot)}>\n              <i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}